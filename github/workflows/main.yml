# Main CI/CD Pipeline
# This workflow handles the complete CI/CD process including:
# - Running tests
# - Security scanning
# - Building and pushing Docker images
# - Deploying infrastructure with Terraform
# - Deploying to ECS with zero downtime

name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  PROJECT_NAME: microservice-app
  TERRAFORM_VERSION: 1.0.0

permissions:
  id-token: write   # Required for OIDC
  contents: read    # Required for checkout

jobs:
  terraform-deploy:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role
          aws-region: ${{ env.AWS_REGION }}
          audience: sts.amazonaws.com
          role-duration-seconds: 900

      - name: Verify AWS Identity
        run: |
          aws sts get-caller-identity

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Format Check
        run: |
          cd terraform
          terraform fmt -check

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Validate
        run: |
          cd terraform
          terraform validate

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -var="project_name=${{ env.PROJECT_NAME }}" \
                        -var="aws_region=${{ env.AWS_REGION }}" \
                        -var="environment=prod" \
                        -out=tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: |
          cd terraform
          terraform apply -auto-approve tfplan
